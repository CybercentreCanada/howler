name: "Create Release"

on:
  # Allows this workflow to be run manually from the Actions tab
  workflow_dispatch:
    inputs:
      type:
        type: choice
        required: true
        description: What type of release should be made
        default: minor
        options:
          - major
          - minor
          - patch
      include-ui:
        type: boolean
        default: true
        description: Include Howler UI
      include-api:
        type: boolean
        default: true
        description: Include Howler API
      include-client:
        type: boolean
        default: false
        description: Include Howler Client
      include-evidence:
        type: boolean
        default: true
        description: Include Howler Evidence Plugin
      include-sentinel:
        type: boolean
        default: true
        description: Include Howler Sentinel Plugin

permissions:
  contents: write

jobs:
  create-and-bump-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # needed to push commits and tags
      # You might also need 'actions: write' in some setups

    steps:
      # Check out the repository
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install Poetry
        uses: abatilo/actions-poetry@v4

      # Configure Git so we can commit and push tags/changes
      - name: Configure Git and Github CLI
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          sudo apt-get update
          sudo apt-get install -y gh

      # Read the current version from VERSION file
      - name: Read current versions
        id: versions
        run: |
          python -c "import json;print('ui-version='+json.load(open('ui/package.json', 'r'))['version'])" >> $GITHUB_OUTPUT
          cd api
          echo "api-version=$(poetry version -s)"
          cd ../plugins/evidence
          echo "evidence-version=$(poetry version -s)"
          cd ../plugins/sentinel
          echo "sentinel-version=$(poetry version -s)"
          cd ../client
          echo "client-version=$(poetry version -s)"

      # Create a new tag and GitHub release from the current version
      - name: Print Existing Versions
        run: |
          echo "UI Version: ${{steps.versions.outputs.ui-version}}"
          echo "API Version: ${{steps.versions.outputs.api-version}}"
          echo "Client Version: ${{steps.versions.outputs.client-version}}"
          echo "--------------------------------"
          echo "Evidence Plugin Version: ${{steps.versions.outputs.evidence-version}}"
          echo "Sentinel Plugin Version: ${{steps.versions.outputs.sentinel-version}}"
