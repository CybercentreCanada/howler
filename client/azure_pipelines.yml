trigger:
  branches:
    include:
      - main
      - develop
      - rc/*
      - patch/*

pr:
  branches:
    include:
      - main
      - develop
      - rc/*
      - patch/*

parameters:
  - name: forceBuild
    displayName: Force build Python artifact and push to feed
    type: boolean
    default: false

variables:
  tag: "$(Build.BuildId)"
  branch: "$(Build.SourceBranchName)"
  repoName: "howler_client"
  isMaster: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]
  isPrBranch: $[eq(variables['Build.SourceBranchName'], 'merge')]
  pythonVersion: "3.9"

pool:
  vmImage: "ubuntu-latest"

stages:
  - stage: test
    jobs:
      - job: Run_Python_Test
        strategy:
          matrix:
            python3_9:
              python.version: "3.9"

        steps:
          - task: UsePythonVersion@0
            displayName: Set Python Version
            inputs:
              versionSpec: "3.9"
          - script: |
              python -m venv venv
              . ./venv/bin/activate
              python -m pip install --upgrade pip
              python -m pip install --no-cache-dir -e .

              python -m pip install --no-cache-dir -r test/requirements.txt
            displayName: Install howler-client
            workingDirectory: $(Pipeline.Workspace)/s
          - script: |
              . ./venv/bin/activate
              python -m howler.app &
              pytest -rsx -vv test/unit
            workingDirectory: $(Pipeline.Workspace)/s
            displayName: Test
  - stage: python
    jobs:
      - job: Build_Python_Artifact
        workspace:
          clean: all
        steps:
          - task: UsePythonVersion@0
            displayName: Set Python Version
            inputs:
              versionSpec: "3.9"
          - script: |
              python -m venv venv
              . ./venv/bin/activate
              pip install wheel
              pip install -r requirements.txt
              echo '.$(tag)' >> version.txt
              cat version.txt
              git config --global --add url."git@github.com:".insteadOf "https://github.com/"
              python setup.py bdist_wheel
            displayName: Install and Build
          - task: CopyFiles@2
            inputs:
              targetFolder: $(Build.ArtifactStagingDirectory)
            displayName: "Stage build artifact to publish"
          - task: PublishBuildArtifacts@1
            inputs:
              pathtoPublish: "$(Build.ArtifactStagingDirectory)/dist"
              artifactName: "howler_client"
              publishLocation: "Container"
            displayName: Publish build artifacts

      - job: Publish_Artifact_To_Feed
        dependsOn: Build_Python_Artifact
        condition: or(eq(variables.isMaster, true), eq('${{ parameters.forceBuild }}', true))
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: "current"
              downloadType: "specific"
              downloadPath: "$(Pipeline.Workspace)"
            displayName: "Download build artifact"
          - task: TwineAuthenticate@1
            inputs:
              pythonUploadServiceConnection: "PyPI Analysis Support"
          - script: |
              virtualenv -p python$(pythonVersion) env
              source env/bin/activate
              pip install twine
              cat $(PYPIRC_PATH)
              python -m twine upload --non-interactive -r pypi --config-file $(PYPIRC_PATH) $(Pipeline.Workspace)/howler_client/*
            displayName: "Publish artifact to PyPI feed"
